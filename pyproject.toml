# Refer to PEP 621, 518 and 517
[build-system]
requires = [
    "setuptools",
    "Cython>=0.29.0,<3.0.0",
    "versioneer[toml]",
    "numpy>=1.21.5,<2.0.0; python_version>='3.8' and python_version<'3.11'",
    "numpy>=1.26.0,<2.0.0; python_version>='3.11' and python_version<'3.13'",
	"numpy>=2.0.0; python_version>='3.13'", # not supported yet
]
build-backend = "setuptools.build_meta"

[project]
name = "pydsstools"
#version = "2.3.1"
dynamic = [
    "version"
]
description = "Python library to read-write HEC-DSS database file"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [{name = "Gyan Basyal", email = "gyanBasyalz@gmail.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    #"numpy>=1.16.4; python_version=='3.6'",
    #"numpy>=1.21.5; python_version=='3.7'",
    "numpy>=1.21.5,<2.0.0; python_version>='3.8' and python_version<'3.11'",
    "numpy>=1.26.0,<2.0.0; python_version>='3.11' and python_version<'3.13'",
	"numpy>=2.0.0; python_version>='3.13'", # not supported yet
    "pandas",
    "affine",
    "pyproj",
    "pydantic>=2,<3",
]

[project.optional-dependencies]
test = [
    "pyogrios",
    "geopandas",
    "rasterio >= 1.2.1",
    "matplotlib"
]

[project.urls]
repository = "https://github.com/gyanz/pydsstools"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
include = [
    'pydsstools',
    'pydsstools._lib',
    'pydsstools._lib.x64',
    'pydsstools._lib.x86',
    'pydsstools.core',
    'pydsstools.heclib',
    'pydsstools.heclib.dss',
    'pydsstools.utils',
]
namespaces = false


[tool.setuptools.package-data]
pydsstools = ['examples/*.py','examples/*.ds[cs]',
              'src/*.pyx','src/*.pxd' 
]

[tool.distutils.build_ext]
inplace = false

[tool.black]
line-length = 88
target-version = ["py38","py39","py310","py311","py312"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Core quality + import sorting via Ruff (no isort needed)
select = ["E", "F", "I", "UP", "B", "SIM"]
# Avoid clashes with Black / long-line double-reporting
ignore = ["E203", "W503", "E501"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]   # re-export patterns are fine

# Optional: NumPy docstring checks
[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.cython-lint]
max-line-length = 88
ignore = ["E203", "E501"]

[tool.docformatter]
wrap_summaries = 88
wrap_descriptions = 88
pre_summary_newline = true
make_summary_multi_line = true
force_wrap = false
tab_width = 4